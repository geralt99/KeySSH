#!/bin/bash
rm $HOME/pkeyssh > /dev/null 2>&1
cat /dev/null > ~/.bash_history && history -c
x="ok"
IP=$(wget -qO- ipv4.icanhazip.com)
while true $x != "ok"
do
clear
if [ ! -e /home/keyssh ]; then
    mkdir /home/keyssh
fi
key_tmp="$RANDOM"
fun_gerkey () {
echo -ne "\033[1;36m Infome o nome do Cliente:\033[1;37m "; read client
if [[ -z $client ]]; then
   echo -e "\033[1;31m Nome invalido ou vazio\033[0m"
   sleep 2
   exit 0
fi
echo -ne "\033[1;36m Quantos minutos essa key deve durar\033[1;33m
(\033[1;31mEX: 20m m=Minutos, h=Horas, d=Dias\033[1;33m)\033[1;37m: "; read _temp
if [[ -z $_temp ]]; then
   echo -e "\033[1;31m Tempo invalido ou vazio\033[0m"
   sleep 2
   exit 0
fi
VERSION_ID=$(cat /etc/os-release | grep "VERSION_ID")
if [[ "$VERSION_ID" = 'VERSION_ID="14.04"' ]]; then
[[ ! -e /var/www/index.html ]] && touch /var/www/index.html > /dev/null 2>&1
mkdir /var/www/$key_tmp/
touch /home/keyssh/$client
cp /home/instt /var/www/$key_tmp/
cp /home/vip-vps.sh /var/www/$key_tmp/
# cp /home/painel15.tar /var/www/$key_tmp/
touch /var/www/$key_tmp/index.html > /dev/null 2>&1
else
[[ ! -e /var/www/html/Index.php ]] && touch /var/www/html/index.php > /dev/null 2>&1
mkdir /var/www/html/$key_tmp/
touch /home/keyssh/$client
cp /home/instt /var/www/html/$key_tmp/
cp /home/vip-vps.sh /var/www/html/$key_tmp/
# cp /home/painel15.tar /var/www/html/$key_tmp/
touch /var/www/html/$key_tmp/index.html > /dev/null 2>&1
fi
clear
echo -e "\n\033[1;32m KEY GERADA COM SUCESSO !    \033[0m"
echo -e "\n\033[1;36m ###################################"
echo -e "\n\033[1;36m INSTALACAO SSHPLUS MANAGER"
echo -e "\n\033[1;36m * SISTEMA RECOMENDADO, Ubuntu 14 x86/x64"
echo -e "\n\033[1;36m wget $IP/Plus > /dev/null 2>&1 && chmod +x Plus && ./Plus"
echo -e "\n\033[1;32m Usuario: $client\033[0m"
echo -e "\n Chave Key:\033[1;37m $key_tmp\033[0m"
echo -e "\n\033[1;36m Validade da key:\033[1;37m $_temp\033[0m"
echo -e ""
echo -e "\033[1;31m By: Geral\033[0m"
echo -e "\n\033[1;36m ###################################"
echo ""

VERSION_ID=$(cat /etc/os-release | grep "VERSION_ID")
if [[ "$VERSION_ID" = 'VERSION_ID="14.04"' ]]; then
echo "#!/bin/bash
sleep $_temp
rm -rf /var/www/$key_tmp
rm -rf /home/keyssh/$client
exit" > /home/keyssh/$client
else
echo "#!/bin/bash
sleep $_temp
rm -rf /var/www/html/$key_tmp
rm -rf /home/keyssh/$client
exit" > /home/keyssh/$client
fi
bash /home/keyssh/$client &
exit
}
fun_delkey () {
tput setaf 7 ; tput setab 1 ; tput bold ; printf '%22s%s%-5s\n' "REMOVER KEY ONLINE" ; tput sgr0
echo  -e "\033[1;33m"
for keyson in $(ls /home/keyssh |sort |sed 's/.sh//g')
do
echo " $keyson"
done
echo ""
echo -ne "\033[1;36m Imforme o nome: \033[1;37m "; read client
if [ -e /home/keyssh/$client ]; then
    tmp=$(cat /home/keyssh/$client | sed -n '2 p')
    sed -i "s/\b$tmp\b/echo -n/g" /home/keyssh/$client > /dev/null 2>&1
    bash /home/keyssh/$client;
    sleep 2
    echo -e "\n\033[1;32m Key Removida Com Sucesso !\033[0m"
    else
    echo -e "\n\033[1;31m Key nao existente !\033[0m"
    sleep 2.5s
fi
}
fun_keyson () {
tput setaf 7 ; tput setab 4 ; tput bold ; printf '%22s%s%-12s\n' "KEYS ONLINE" ; tput sgr0
echo ""
[ "$(ls -A /home/keyssh)" ] && echo -e "\033[1;32m Key Online!\033[1;37m" || echo -e "\033[1;31m Nenhuma Key Online!\033[0m"
echo ""
ls /home/keyssh
echo ""
}
fun_gerkey_fixa () {
key_tmp="$RANDOM"
echo -ne "\033[1;36m Infome o nome do Cliente:\033[1;37m "; read client
if [[ -z $client ]]; then
   echo -e "\033[1;31m Nome invalido ou vazio\033[0m"
   sleep 2
   exit 0
fi
VERSION_ID=$(cat /etc/os-release | grep "VERSION_ID")
if [[ "$VERSION_ID" = 'VERSION_ID="14.04"' ]]; then
mkdir /var/www/$key_tmp/
touch /home/keyssh/$client
cp /home/instt /var/www/$key_tmp/
cp /home/vip-vps.sh /var/www/$key_tmp/
# cp /home/painel15.tar /var/www/$key_tmp/
touch /var/www/$key_tmp/index.html > /dev/null 2>&1
else
mkdir /var/www/html/$key_tmp/
touch /home/keyssh/$client
cp /home/instt /var/www/html/$key_tmp/
cp /home/vip-vps.sh /var/www/html/$key_tmp/
# cp /home/painel15.tar /var/www/html/$key_tmp/
touch /var/www/html/$key_tmp/index.html > /dev/null 2>&1
fi
clear
echo -e "\n\033[1;32m KEY GERADA COM SUCESSO !    \033[0m"
echo -e "\n\033[1;36m ###################################"
echo -e "\n\033[1;36m INSTALACAO SSHPLUS"
echo -e "\n\033[1;36m * SISTEMA RECOMENDADO, Ubuntu 14 x86/x64"
echo -e "\n\033[1;36m wget $IP/Plus > /dev/null 2>&1 && chmod +x Plus && ./Plus"
echo -e "\n\033[1;32m Usuario: $client\033[0m"
echo -e "\n Chave Key:\033[1;37m $key_tmp\033[0m"
echo -e "\n\033[1;36m Validade da key:\033[1;37m Permanente\033[0m"
echo -e ""
echo -e "\033[1;31m By Geralt\033[0m"
echo ""

VERSION_ID=$(cat /etc/os-release | grep "VERSION_ID")
if [[ "$VERSION_ID" = 'VERSION_ID="14.04"' ]]; then
echo "#!/bin/bash
rm -rf /var/www/$key_tmp
rm -rf /home/keyssh/$client
exit" > /home/keyssh/$client
else
echo "#!/bin/bash
rm -rf /var/www/html/$key_tmp
rm -rf /home/keyssh/$client
exit" > /home/keyssh/$client
fi
# bash /home/keyssh/$client &
exit
}
# tput setaf 7 ; tput setab 4 ; tput bold ; printf '%32s%s%-12s\n' "GERENCIAMENTO DE KEY SSHPLUS MANAGER" ; tput sgr0
echo -e "\033[0;34m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\033[0m"
echo -e "\E[41;1;37m       ❖ KEY SSHPLUS MANAGER ❖      \E[0m"
echo -e "\033[0;34m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\033[0m"
echo -e "\033[0;31m≠≠≠≠≠≠≠≠≠≠≠≠≠≠≠≠≠≠≠≠≠≠≠≠≠≠≠≠≠≠≠≠≠≠≠≠≠≠≠≠≠≠≠≠\033[0m"
sts=$([ "$(ls -A /home/keyssh)" ] && echo -e "\033[1;32m Key Online!\033[1;37m" || echo -e "\033[1;31m Nenhuma Key Online!\033[0m")
echo -e "\033[1;37m STATUS: $sts"
echo -e "\033[0;31m≠≠≠≠≠≠≠≠≠≠≠≠≠≠≠≠≠≠≠≠≠≠≠≠≠≠≠≠≠≠≠≠≠≠≠≠≠≠≠≠≠≠≠≠\033[0m"
echo ""
echo -e "\033[1;37m 1 \033[1;31m• \033[1;36mGERAR NOVA KEY\033[0m"
echo""
echo -e "\033[1;37m 2 \033[1;31m• \033[1;36mREMOVER KEY\033[0m"
echo ""
echo -e "\033[1;37m 3 \033[1;31m• \033[1;36mVER KEYS ONLINES\033[0m"
echo ""
echo -e "\033[1;37m 4 \033[1;31m• \033[1;36mCRIAR KEY FIXA SEM VALIDADE\033[1;33m !\033[0m"
echo ""
echo -e "\033[1;37m 0 \033[1;31m• \033[1;36mSAIR\033[0m"
echo ""
echo -e "\033[0;31m≠≠≠≠≠≠≠≠≠≠≠≠≠≠≠≠≠≠≠≠≠≠≠≠≠≠≠≠≠≠≠≠≠≠≠≠≠≠≠≠≠≠≠≠\033[0m"
echo ""
echo -ne "\033[1;32m Escolha uma opcao:\033[1;37m "; read x

clear
case $x in

1)
clear
fun_gerkey
echo -ne "\n\033[1;33m Enter para retornar\033[0m"; read
;;
2)
clear
fun_delkey
echo -e "\n\033[1;33m Enter para retornar\033[0m"
sleep 1
;;
3)
clear
fun_keyson
echo -ne "\n\033[1;33m Enter para retornar\033[0m"; read
sleep 1
;;
4)
clear
fun_gerkey_fixa
echo -ne "\n\033[1;33m Enter para retornar\033[0m"; read
sleep 1
;;
0)
echo -ne "\033[1;32m Saindo... Enter para SAIR\033[0m" 
read
echo ""
clear
exit
clear
;;
*)
echo -ne "\033[1;31m Opcao invalida...\033[0m"; read
sleep 1
ok
;;
esac
done
#fim
cat /dev/null > ~/.bash_history && history -c
rm $HOME/pkeyssh > /dev/null 2>&1
